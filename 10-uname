#!/bin/bash
uname -snrvm

echo ""

if [$HOSTNAME == "proxmox"]; then

   /usr/bin/env figlet "SKYNET SERVER"

else

   /usr/bin/env figlet "$(hostname)"

fi


#***********
#* SYSINFO *
#***********


# get load averages
#IFS=" " read LOAD1 LOAD5 LOAD15 <<<$(cat /proc/loadavg | awk '{ print $1,$2,$3 }')
# get free memory
#IFS=" " read USED AVAIL TOTAL <<<$(free -htm | grep "Mem" | awk {'print $3,$7,$2'})
# get processes
#PROCESS=`ps -eo user=|sort|uniq -c | awk '{ print $2 " " $1 }'`
#PROCESS_ALL=`echo "$PROCESS"| awk {'print $2'} | awk '{ SUM += $1} END { print SUM }'`
#PROCESS_ROOT=`echo "$PROCESS"| grep root | awk {'print $2'}`
#PROCESS_USER=`echo "$PROCESS"| grep -v root | awk {'print $2'} | awk '{ SUM += $1} END { print SUM }'`
# get processors
#PROCESSOR_NAME=`grep "model name" /proc/cpuinfo | cut -d ' ' -f3- | awk {'print $0'} | head -1`
#PROCESSOR_COUNT=`grep -ioP 'processor\t:' /proc/cpuinfo | wc -l`

W="\e[0;39m"
G="\e[1;32m"

echo -e "
Distro     `cat /etc/*release | grep "PRETTY_NAME" | cut -d "=" -f 2- | sed 's/"//g'`
Kernel     `uname -sr`

Hostname   `hostname` : `hostname -i`

Uptime     `uptime -p`

Updates    $G`apt-get -q -y --ignore-hold --allow-change-held-packages --allow-unauthenticated -s dist-upgrade | /bin/grep  >
$W"

#echo -e "
#${W}system info:
#$W  Load........: $G$LOAD1$W (1m), $G$LOAD5$W (5m), $G$LOAD15$W (15m)
#$W  Processes...:$W $G$PROCESS_ROOT$W (root), $G$PROCESS_USER$W (user), $G$PROCESS_ALL$W (total)
#
#$W  CPU.........: $W$PROCESSOR_NAME ($G$PROCESSOR_COUNT$W vCPU)
#$W  Memory......: $G$USED$W used, $G$AVAIL$W avail, $G$TOTAL$W total$W"
#Updates    $W`aptitude search "~U" | wc -l`
#"



#**********
#* DOCKER *
#**********

if which docker >/dev/null; then

# set column width
COLUMNS=2
# colors
green="\e[1;32m"
red="\e[1;31m"
undim="\e[0m"

mapfile -t containers < <(docker ps -a --format '{{.Names}}\t{{.Status}}' | sort -k1 | awk '{ print $1,$2 }')

out=""
for i in "${!containers[@]}"; do
    IFS=" " read name status <<< ${containers[i]}
    # color green if service is active, else red
    if [[ "${status}" == "Up" ]]; then
        out+="${name},${green}${status,,}${undim},"
    else
        out+="${name},${red}${status,,}${undim},"
    fi
    # insert \n every $COLUMNS column
    if [ $((($i+1) % $COLUMNS)) -eq 0 ]; then
        out+="\n"
    fi
done

out+="\n"

printf "\nDocker status:\n"
printf "$out" | column -ts $',' | sed -e 's/^/  /'
printf "\n"


fi



#***********
#* PI-HOLE *
#***********

if which hihole >/dev/null; then

echo -e "`pihole -v`"

fi
